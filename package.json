{
  "name": "unit5-c3-eval",
  "version": "1.0.0",
  "description": "- Create a voting system for users\r - the voting system has 2 types of user:\r   - Voters\r   - Candidates\r - Every Candidate belong to a \"Party\"\r   - PartyA\r   - PartyB\r - you differentiate between users based on their \"Role\"\r - Every user has folloing attributes:\r   - id (uuid)\r   - name\r   - role (voter/candidate)\r   - age\r - if users role is candidate he has more following fields:\r   - votes (total votes he got)\r   - party (which party he belongs to)\r - If user is 'voter' he has following additional fields:\r   - username \r   - password\r - create such mock dummy data\r - only voters are allowed to vote\r - if a voter is not logged in he is not allowed to vote\r - Every single request needs to have a query param called as `apiKey`\r - it's value is a token, read more about it below in login section\r - obviously, only `create`, `login` and logout routes will not need `apiKey`, it's only for `/votes/*` routes.\r - other every single route will need it\r - create a auth middleware for such\r - You have following routes:\r   - `/user/create`\r     - to create a new user in the db\r     - method:POST\r     - body: entire user object\r     - returns: 201 code, `{status: \"user created\", id of user }`\r   - `/user/login`\r     - to log user in.\r     - method: POST\r     - body: username, password\r     - if username or password is not provided, return 400 status with message `{ status: \"please provide username and password\" }`\r     - look for a user in db who has same username and password, if found:\r     - generate a random token for user\r     - store that token with the user object in db\r     - returns: `{ status: \"Login Successful\", token }`\r     - if user not found, return 401, `{ status: \"Invalid Credentials\" }`\r   - `/user/logout`\r     - to log user out\r     - Method: POST\r     - delete the `token` property from user in db.\r     - return `{ status: \"user logged out successfully\" }`\r   - `/votes/party/:party`\r     - Get list of all candidates by party name\r     - GET\r   - `/votes/voters`\r     - GET\r     - get list of all 'voters'\r   - `/votes/vote/:user`\r     - POST\r     - Vote a user, just increment vote count by 1 in db\r   - `/votes/count/:user`\r     - Get total count of votes of a candidate\r     - `{ status: x }` in success, where x is count\r     - `{ status: \"cannot find user\" }` if user not found\r   - Apart from these route, create 2 routes for test cases:\r     - `/db`, GET, will just return the entire db.json as it is\r     - `/db` POST, will store WHATEVER we give in req.body to db.json (override entire previous data)\r     - both of these are only for test cases so they wont need apikey or anything else.\r - These are the only routes you need to make\r - for simplicity you can use synchronous file reading and writting methods, asynchronous is also acceptable\r - Once done, deploy the application to `heroku`",
  "main": "index.js",
  "dependencies": {
    "abbrev": "^1.1.1",
    "accepts": "^1.3.8",
    "ansi-styles": "^4.3.0",
    "ansi-escapes": "^4.3.2",
    "ansi-regex": "^5.0.1",
    "ansi-align": "^3.0.1",
    "array-flatten": "^1.1.1",
    "argparse": "^1.0.10",
    "anymatch": "^3.1.2",
    "babel-jest": "^28.1.0",
    "asynckit": "^0.4.0",
    "babel-plugin-istanbul": "^6.1.1",
    "axios": "^0.27.2",
    "babel-plugin-jest-hoist": "^28.0.2",
    "babel-preset-jest": "^28.0.2",
    "babel-preset-current-node-syntax": "^1.0.1",
    "balanced-match": "^1.0.2",
    "binary-extensions": "^2.2.0",
    "body-parser": "^1.20.0",
    "boxen": "^5.1.2",
    "braces": "^3.0.2",
    "brace-expansion": "^1.1.11",
    "browserslist": "^4.20.3",
    "buffer-from": "^1.1.2",
    "bser": "^2.1.1",
    "cacheable-request": "^6.1.0",
    "bytes": "^3.1.2",
    "call-bind": "^1.0.2",
    "callsites": "^3.1.0",
    "camelcase": "^5.3.1",
    "chalk": "^4.1.2",
    "caniuse-lite": "^1.0.30001346",
    "char-regex": "^1.0.2",
    "chokidar": "^3.5.3",
    "ci-info": "^3.3.1",
    "cjs-module-lexer": "^1.2.2",
    "cli-boxes": "^2.2.1",
    "cliui": "^7.0.4",
    "clone-response": "^1.0.2",
    "color-convert": "^2.0.1",
    "co": "^4.6.0",
    "collect-v8-coverage": "^1.0.1",
    "combined-stream": "^1.0.8",
    "configstore": "^5.0.1",
    "concat-map": "^0.0.1",
    "content-disposition": "^0.5.4",
    "content-type": "^1.0.4",
    "cookie": "^0.5.0",
    "convert-source-map": "^1.8.0",
    "cross-spawn": "^7.0.3",
    "cookie-signature": "^1.0.6",
    "crypto-random-string": "^2.0.0",
    "debug": "^2.6.9",
    "decompress-response": "^3.3.0",
    "dedent": "^0.7.0",
    "deep-extend": "^0.6.0",
    "color-name": "^1.1.4",
    "deepmerge": "^4.2.2",
    "defer-to-connect": "^1.1.3",
    "delayed-stream": "^1.0.0",
    "depd": "^2.0.0",
    "detect-newline": "^3.1.0",
    "destroy": "^1.2.0",
    "diff-sequences": "^28.0.2",
    "dot-prop": "^5.3.0",
    "ee-first": "^1.1.1",
    "duplexer3": "^0.1.4",
    "emittery": "^0.10.2",
    "emoji-regex": "^8.0.0",
    "electron-to-chromium": "^1.4.146",
    "encodeurl": "^1.0.2",
    "end-of-stream": "^1.4.4",
    "error-ex": "^1.3.2",
    "escalade": "^3.1.1",
    "escape-goat": "^2.1.1",
    "escape-string-regexp": "^2.0.0",
    "escape-html": "^1.0.3",
    "esprima": "^4.0.1",
    "etag": "^1.8.1",
    "exit": "^0.1.2",
    "execa": "^5.1.1",
    "fast-json-stable-stringify": "^2.1.0",
    "expect": "^28.1.0",
    "fb-watchman": "^2.0.1",
    "express": "^4.18.1",
    "fill-range": "^7.0.1",
    "follow-redirects": "^1.15.1",
    "find-up": "^4.1.0",
    "form-data": "^4.0.0",
    "finalhandler": "^1.2.0",
    "forwarded": "^0.2.0",
    "fs.realpath": "^1.0.0",
    "fresh": "^0.5.2",
    "gensync": "^1.0.0-beta.2",
    "function-bind": "^1.1.1",
    "get-caller-file": "^2.0.5",
    "get-intrinsic": "^1.1.1",
    "get-package-type": "^0.1.0",
    "get-stream": "^6.0.1",
    "glob": "^7.2.3",
    "glob-parent": "^5.1.2",
    "got": "^9.6.0",
    "graceful-fs": "^4.2.10",
    "has": "^1.0.3",
    "globals": "^11.12.0",
    "html-escaper": "^2.0.2",
    "has-flag": "^4.0.0",
    "has-symbols": "^1.0.3",
    "global-dirs": "^3.0.0",
    "http-cache-semantics": "^4.1.0",
    "has-yarn": "^2.1.0",
    "http-errors": "^2.0.0",
    "human-signals": "^2.1.0",
    "iconv-lite": "^0.4.24",
    "import-local": "^3.1.0",
    "ignore-by-default": "^1.0.1",
    "inflight": "^1.0.6",
    "import-lazy": "^2.1.0",
    "imurmurhash": "^0.1.4",
    "inherits": "^2.0.4",
    "ipaddr.js": "^1.9.1",
    "is-binary-path": "^2.1.0",
    "ini": "^2.0.0",
    "is-core-module": "^2.9.0",
    "is-arrayish": "^0.2.1",
    "is-extglob": "^2.1.1",
    "is-ci": "^2.0.0",
    "is-fullwidth-code-point": "^3.0.0",
    "is-generator-fn": "^2.1.0",
    "is-number": "^7.0.0",
    "is-npm": "^5.0.0",
    "is-glob": "^4.0.3",
    "is-obj": "^2.0.0",
    "is-installed-globally": "^0.4.0",
    "is-stream": "^2.0.1",
    "is-typedarray": "^1.0.0",
    "is-path-inside": "^3.0.3",
    "isexe": "^2.0.0",
    "is-yarn-global": "^0.3.0",
    "istanbul-lib-instrument": "^5.2.0",
    "istanbul-lib-coverage": "^3.2.0",
    "istanbul-reports": "^3.1.4",
    "istanbul-lib-report": "^3.0.0",
    "jest": "^28.1.0",
    "istanbul-lib-source-maps": "^4.0.1",
    "jest-cli": "^28.1.0",
    "jest-changed-files": "^28.0.2",
    "jest-config": "^28.1.0",
    "jest-circus": "^28.1.0",
    "jest-diff": "^28.1.0",
    "jest-each": "^28.1.0",
    "jest-docblock": "^28.0.2",
    "jest-get-type": "^28.0.2",
    "jest-environment-node": "^28.1.0",
    "jest-haste-map": "^28.1.0",
    "jest-matcher-utils": "^28.1.0",
    "jest-leak-detector": "^28.1.0",
    "jest-message-util": "^28.1.0",
    "jest-mock": "^28.1.0",
    "jest-pnp-resolver": "^1.2.2",
    "jest-regex-util": "^28.0.2",
    "jest-resolve-dependencies": "^28.1.0",
    "jest-resolve": "^28.1.0",
    "jest-runtime": "^28.1.0",
    "jest-runner": "^28.1.0",
    "jest-snapshot": "^28.1.0",
    "jest-validate": "^28.1.0",
    "jest-util": "^28.1.0",
    "jest-worker": "^28.1.0",
    "jest-watcher": "^28.1.0",
    "jsesc": "^2.5.2",
    "js-tokens": "^4.0.0",
    "js-yaml": "^3.14.1",
    "json-buffer": "^3.0.0",
    "json-parse-even-better-errors": "^2.3.1",
    "kleur": "^3.0.3",
    "json5": "^2.2.1",
    "keyv": "^3.1.0",
    "leven": "^3.1.0",
    "latest-version": "^5.1.0",
    "lru-cache": "^6.0.0",
    "lines-and-columns": "^1.2.4",
    "locate-path": "^5.0.0",
    "make-dir": "^3.1.0",
    "lowercase-keys": "^1.0.1",
    "merge-descriptors": "^1.0.1",
    "media-typer": "^0.3.0",
    "makeerror": "^1.0.12",
    "merge-stream": "^2.0.0",
    "methods": "^1.1.2",
    "micromatch": "^4.0.5",
    "mime-db": "^1.52.0",
    "mime": "^1.6.0",
    "mime-types": "^2.1.35",
    "mimic-response": "^1.0.1",
    "mimic-fn": "^2.1.0",
    "minimatch": "^3.1.2",
    "ms": "^2.0.0",
    "natural-compare": "^1.4.0",
    "negotiator": "^0.6.3",
    "minimist": "^1.2.6",
    "node-releases": "^2.0.5",
    "nodemon": "^2.0.16",
    "nopt": "^1.0.10",
    "normalize-url": "^4.5.1",
    "node-int64": "^0.4.0",
    "normalize-path": "^3.0.0",
    "object-inspect": "^1.12.2",
    "npm-run-path": "^4.0.1",
    "on-finished": "^2.4.1",
    "once": "^1.4.0",
    "onetime": "^5.1.2",
    "p-cancelable": "^1.1.0",
    "package-json": "^6.5.0",
    "p-limit": "^2.3.0",
    "p-try": "^2.2.0",
    "p-locate": "^4.1.0",
    "parse-json": "^5.2.0",
    "parseurl": "^1.3.3",
    "path-is-absolute": "^1.0.1",
    "path-exists": "^4.0.0",
    "path-key": "^3.1.1",
    "path-parse": "^1.0.7",
    "picocolors": "^1.0.0",
    "path-to-regexp": "^0.1.7",
    "picomatch": "^2.3.1",
    "pirates": "^4.0.5",
    "pkg-dir": "^4.2.0",
    "prepend-http": "^2.0.0",
    "pretty-format": "^28.1.0",
    "prompts": "^2.4.2",
    "proxy-addr": "^2.0.7",
    "pump": "^3.0.0",
    "pstree.remy": "^1.1.8",
    "pupa": "^2.1.1",
    "qs": "^6.10.3",
    "range-parser": "^1.2.1",
    "raw-body": "^2.5.1",
    "rc": "^1.2.8",
    "readdirp": "^3.6.0",
    "react-is": "^18.1.0",
    "registry-auth-token": "^4.2.1",
    "registry-url": "^5.1.0",
    "require-directory": "^2.1.1",
    "resolve": "^1.22.0",
    "resolve-cwd": "^3.0.0",
    "resolve-from": "^5.0.0",
    "resolve.exports": "^1.1.0",
    "responselike": "^1.0.2",
    "rimraf": "^3.0.2",
    "safe-buffer": "^5.2.1",
    "semver": "^6.3.0",
    "safer-buffer": "^2.1.2",
    "semver-diff": "^3.1.1",
    "serve-static": "^1.15.0",
    "send": "^0.18.0",
    "setprototypeof": "^1.2.0",
    "shebang-command": "^2.0.0",
    "shebang-regex": "^3.0.0",
    "side-channel": "^1.0.4",
    "sisteransi": "^1.0.5",
    "signal-exit": "^3.0.7",
    "slash": "^3.0.0",
    "source-map": "^0.6.1",
    "source-map-support": "^0.5.13",
    "sprintf-js": "^1.0.3",
    "stack-utils": "^2.0.5",
    "statuses": "^2.0.1",
    "string-length": "^4.0.2",
    "string-width": "^4.2.3",
    "strip-ansi": "^6.0.1",
    "strip-bom": "^4.0.0",
    "strip-final-newline": "^2.0.0",
    "supports-color": "^7.2.0",
    "strip-json-comments": "^3.1.1",
    "supports-preserve-symlinks-flag": "^1.0.0",
    "supports-hyperlinks": "^2.2.0",
    "terminal-link": "^2.1.1",
    "test-exclude": "^6.0.0",
    "throat": "^6.0.1",
    "to-fast-properties": "^2.0.0",
    "tmpl": "^1.0.5",
    "to-regex-range": "^5.0.1",
    "to-readable-stream": "^1.0.0",
    "toidentifier": "^1.0.1",
    "type-detect": "^4.0.8",
    "touch": "^3.1.0",
    "type-fest": "^0.21.3",
    "type-is": "^1.6.18",
    "typedarray-to-buffer": "^3.1.5",
    "undefsafe": "^2.0.5",
    "unique-string": "^2.0.0",
    "unpipe": "^1.0.0",
    "update-notifier": "^5.1.0",
    "url-parse-lax": "^3.0.0",
    "utils-merge": "^1.0.1",
    "v8-to-istanbul": "^9.0.0",
    "vary": "^1.1.2",
    "walker": "^1.0.8",
    "which": "^2.0.2",
    "widest-line": "^3.1.0",
    "wrap-ansi": "^7.0.0",
    "wrappy": "^1.0.2",
    "write-file-atomic": "^4.0.1",
    "xdg-basedir": "^4.0.0",
    "y18n": "^5.0.8",
    "yallist": "^4.0.0",
    "yargs": "^17.5.1",
    "yargs-parser": "^21.0.1"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/NirbhayPratapSingh/unit5-C3-eval.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/NirbhayPratapSingh/unit5-C3-eval/issues"
  },
  "homepage": "https://github.com/NirbhayPratapSingh/unit5-C3-eval#readme"
}
